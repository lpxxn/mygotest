{
  "consumes": [
    "application/json",
    "application/xml"
  ],
  "produces": [
    "application/json",
    "application/xml"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "the purpose of this application is to provide an application\nthat is using plain go code to define an API\n\nThis should demonstrate all the possible comment annotations\nthat are available to turn go code into a fully compliant swagger 2.0 spec",
    "title": "Test API.",
    "termsOfService": "there are no TOS at this moment, use at your own risk we take no responsibility",
    "contact": {
      "name": "Li Peng",
      "url": "http://agmtrade.com",
      "email": "peng.li@angaomeng.com"
    },
    "license": {
      "name": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    },
    "version": "0.0.1"
  },
  "host": "localhost:9100",
  "basePath": "/",
  "paths": {
    "/ping": {
      "get": {
        "security": [
          {
            "api_key": []
          },
          {
            "oauth": [
              "read",
              "write"
            ]
          }
        ],
        "description": "This will show all available pets by default.\nYou can get the pets that are out of stock",
        "consumes": [
          "application/json",
          "application/x-protobuf"
        ],
        "produces": [
          "application/json",
          "application/x-protobuf"
        ],
        "schemes": [
          "http",
          "https",
          "ws",
          "wss"
        ],
        "tags": [
          "pets",
          "users"
        ],
        "summary": "Lists pets filtered by some parameters.",
        "operationId": "listPets",
        "responses": {
          "200": {
            "$ref": "#/responses/pingResponse"
          },
          "422": {
            "$ref": "#/responses/string"
          },
          "default": {
            "$ref": "#/responses/pingResponse"
          }
        }
      }
    }
  },
  "definitions": {
    "RspPing": {
      "description": "This is used for returning a response with a single order as body",
      "type": "object",
      "properties": {
        "current_time": {
          "description": "The time of Current Request",
          "type": "string",
          "format": "date-time",
          "x-go-name": "CurrentTime"
        },
        "msgstr": {
          "description": "Return Message",
          "type": "string",
          "x-go-name": "Msg"
        },
        "order": {
          "$ref": "#/definitions/order"
        }
      },
      "x-go-package": "github.com/mygotest/workspace/webdemo2/models"
    },
    "order": {
      "type": "object",
      "title": "An Order for one or more products by a user.",
      "required": [
        "id",
        "user_id"
      ],
      "properties": {
        "id": {
          "description": "ID of the order",
          "type": "integer",
          "format": "int64",
          "x-go-name": "ID"
        },
        "items": {
          "description": "items for this order\nmininum items: 1",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "product_id",
              "qty"
            ],
            "properties": {
              "product_id": {
                "description": "the id of the product to order",
                "type": "integer",
                "format": "int64",
                "x-go-name": "ProductID"
              },
              "qty": {
                "description": "the quantity of this product to order",
                "type": "integer",
                "format": "int32",
                "minimum": 1,
                "x-go-name": "Quantity"
              }
            }
          },
          "x-go-name": "OrderItems"
        },
        "user_id": {
          "description": "the id of the user who placed the order.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "UserID"
        }
      },
      "x-go-name": "PintModel",
      "x-go-package": "github.com/mygotest/workspace/webdemo2/models"
    }
  },
  "responses": {
    "pingResponse": {
      "description": "This is used for returning a response with a single order as body",
      "schema": {
        "$ref": "#/definitions/order"
      },
      "headers": {
        "current_time": {
          "type": "string",
          "format": "date-time",
          "description": "The time of Current Request"
        },
        "msgstr": {
          "type": "string",
          "description": "Return Message"
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "KEY",
      "in": "header"
    },
    "oauth2": {
      "type": "oauth2",
      "in": "header",
      "flow": "accessCode",
      "authorizationUrl": "/oauth2/auth",
      "tokenUrl": "/oauth2/token",
      "scopes": {
        "bar": "foo"
      }
    }
  },
  "security": [
    {
      "api_key": []
    }
  ],
  "x-meta-array": [
    "value1",
    "value2"
  ],
  "x-meta-array-obj": [
    {
      "name": "obj",
      "value": "field"
    }
  ],
  "x-meta-value": "value"
}