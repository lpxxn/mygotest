// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2017-12-06 12:33:41.1845383 +0800 CST m=+0.190001200

package docs

import (
	"github.com/swaggo/swag"
)

var doc = `{
    "swagger": "2.0",
    "info": {
        "description": "get struct array by P1Req",
        "title": "Agm API",
        "contact": {},
        "license": {},
        "version": "1.0"
    },
    "paths": {
        "/lptest/p1/": {
            "post": {
                "description": "get struct array by P1Req",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "operationId": "p1",
                "parameters": [
                    {
                        "description": " age, name, cur_time:2017-10-11T12:00:12 ",
                        "name": "P1Req",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.P1Req"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.P1Req"
                        }
                    },
                    "400": {
                        "description": "We need ID!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find ID",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.APIError"
                        }
                    }
                }
            }
        },
        "/lptest/p2/": {
            "get": {
                "description": "get struct array by P1Req",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "operationId": "p2",
                "parameters": [
                    {
                        "type": "string",
                        "description": "param1",
                        "name": "str1",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "param2",
                        "name": "str2",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "We need ID!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find ID",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.APIError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.APIError": {
            "type": "object",
            "properties": {
                "ErrorCode": {
                    "type": "int"
                },
                "ErrorMessage": {
                    "type": "string"
                }
            }
        },
        "models.P1Req": {
            "type": "object",
            "properties": {
                "Age": {
                    "type": "int"
                },
                "CurTime": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            }
        }
    }
}`

type s struct{}

func (s *s) ReadDoc() string {
	return doc
}
func init() {
	swag.Register(swag.Name, &s{})
}
