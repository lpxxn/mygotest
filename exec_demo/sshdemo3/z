package main

import (
    "golang.org/x/crypto/ssh"
    "os"
    "fmt"
    "bytes"
)

func main() {
    client, err := ssh.Dial("tcp", "192.168.154.131:22", &ssh.ClientConfig{
        User: "root",
        Auth: []ssh.AuthMethod{ssh.Password("123456")},
    })
    if err !=nil{
        fmt.Println("ssh Dial err",err)
    }
    session, err := client.NewSession()
    defer session.Close()
    var out bytes.Buffer
    session.Stdout = &out
    session.Stderr = os.Stderr
    session.Stdin = os.Stdin

  //下面的modes和RequestPty是为了防止出现交换机的时候错误，还有就是按照格式输出
    modes := ssh.TerminalModes{
        ssh.ECHO:          0,
        ssh.TTY_OP_ISPEED: 14400,
        ssh.TTY_OP_OSPEED: 14400,
    }
    err = session.RequestPty("xterm", 25, 80, modes)
    err=session.Run("ls")
    session.Run("ls")
    fmt.Println("ls output:",out.String())
    err = session.Wait()
}
