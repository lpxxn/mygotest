package main

import (
	"database/sql"
	_ "github.com/go-sql-driver/mysql"
	"fmt"
	"net/http"
	"strings"
	"strconv"
	"io/ioutil"
)

func main() {
	chs := make(chan int64, 100)

	go readData(chs)
	go sendData(chs)

	select{}
}

func sendData(chs <-chan int64) {
	for v := range chs {
		str := "uid=" + strconv.FormatInt(v, 10)

		// Generated by curl-to-Go: https://mholt.github.io/curl-to-go

		body := strings.NewReader(str)
		req, err := http.NewRequest("POST", "http://127.0.0.1:8888/inner/user/regist", body)
		if err != nil {
			// handle err
		}
		req.Header.Set("Content-Type", "application/x-www-form-urlencoded")

		resp, err := http.DefaultClient.Do(req)
		if err != nil {
			// handle err
		}
		defer resp.Body.Close()
		b, _ := ioutil.ReadAll(resp.Body)
		fmt.Println(string(b))
	}


}

func readData(chs chan <- int64) {
	db, err := sql.Open("mysql", "root:root@tcp(127.0.0.1:3306)/uc_rrnc?charset=utf8")

	defer db.Close()

	if err != nil {
		fmt.Println("failed to connect db ", err)
		return
	}

	rows, err := db.Query(`SELECT id FROM users`)


	if err != nil {
		fmt.Println("failed to query data ", err)
		return
	}

//	var ids []int64
	for rows.Next() {
		var id int64
		rows.Scan(&id)
		chs <- id
		fmt.Println(id)
//		ids = append(ids, id)

	}
//	fmt.Println(ids)


}
